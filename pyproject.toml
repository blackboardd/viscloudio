[tool.commitizen]
version = "1.0.0"
tag_format = 'v$major.$minor.$patch$prerelease'
annotated_tag = true
version_files = [
  'pyproject.toml:tool.commitizen.version',
  'pyproject.toml:tool.poetry.version',
  'viscloudio/__version__.py:__version__'
]

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
files = '.'

[tool.black]
line-length = 80
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.poetry]
name = 'viscloudio'
version = '0.0.0'
description = 'An audio visualizer for Python.'
authors = ['Brighten Tompkins <brightenqtompkins@gmail.com>']
maintainers = ['Brighten Tompkins <brightenqtompkins@gmail.com>']
license = 'MIT'
readme = 'README.md'
packages = [
    { include = 'viscloudio' }
]
homepage = 'https://blackboardd.github.io/viscloudio/'
repository = 'https://github.com/blackboardd/viscloudio'
documentation = 'https://blackboardd.github.io/viscloudio/'
keywords = [
  'Audio Visualizer',
  'Media Playback',
  '3D',
  'Particle Emitter'
]
exclude = ['*.coco']
classifiers = [
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9'
]

[tool.poetry.dependencies]
python = '^3.6'

Panda3D = '^1.10.10'
scipy = '^1.7.3'
poetry-core = '^1.0.7'
virtualenv = '^20.10.0'

[tool.poetry.dev-dependencies]
black = '^21.11b1'
coconut = '^1.6.0'
poetry-dynamic-versioning = '^0.13.1'

[tool.isort]
py_version = 36
profile = 'black'
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ['.']
extend_skip = ['setup.py']


[tool.poetry-dynamic-versioning]
enable = true
vcs = 'git'
style = 'semver'

[build-system]
requires = ['poetry-core>=1.0.0', 'poetry-dynamic-versioning']
build-backend = 'poetry.core.masonry.api'

[tool.semantic_release]
version_variable = 'viscloudio/__version__.py:__version__'
version_toml = [
  'pyproject.toml:tool.poetry.version',
  'pyproject.toml:tool.commitizen.version'
]

branch = 'main'
version_source = 'tag'
upload_to_pypi = false
